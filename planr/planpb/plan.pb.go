// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.27.2
// source: planpb/plan.proto

package planpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The top-level structure of the plan.yml file
type Plan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Applications  []*Application         `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"`
	Interfaces    []*Interface           `protobuf:"bytes,2,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Databases     []*Database            `protobuf:"bytes,3,rep,name=databases,proto3" json:"databases,omitempty"`
	Releases      []*Release             `protobuf:"bytes,4,rep,name=releases,proto3" json:"releases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Plan) Reset() {
	*x = Plan{}
	mi := &file_planpb_plan_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{0}
}

func (x *Plan) GetApplications() []*Application {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *Plan) GetInterfaces() []*Interface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *Plan) GetDatabases() []*Database {
	if x != nil {
		return x.Databases
	}
	return nil
}

func (x *Plan) GetReleases() []*Release {
	if x != nil {
		return x.Releases
	}
	return nil
}

// ABB L2.
type Application struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Modules       []*Module              `protobuf:"bytes,2,rep,name=modules,proto3" json:"modules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_planpb_plan_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{1}
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

// ABB L3.
type Module struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Processes     []*Process             `protobuf:"bytes,2,rep,name=processes,proto3" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Module) Reset() {
	*x = Module{}
	mi := &file_planpb_plan_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{2}
}

func (x *Module) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Module) GetProcesses() []*Process {
	if x != nil {
		return x.Processes
	}
	return nil
}

// ABB L4.
type Process struct {
	state          protoimpl.MessageState         `protogen:"open.v1"`
	Name           string                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PlannedRelease string                         `protobuf:"bytes,2,opt,name=planned_release,json=plannedRelease,proto3" json:"planned_release,omitempty"`
	Interfaces     *ProcessInterfaces             `protobuf:"bytes,3,opt,name=interfaces,proto3" json:"interfaces,omitempty"`
	Databases      map[string]*DatabaseConnection `protobuf:"bytes,4,rep,name=databases,proto3" json:"databases,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Process) Reset() {
	*x = Process{}
	mi := &file_planpb_plan_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Process.ProtoReflect.Descriptor instead.
func (*Process) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{3}
}

func (x *Process) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Process) GetPlannedRelease() string {
	if x != nil {
		return x.PlannedRelease
	}
	return ""
}

func (x *Process) GetInterfaces() *ProcessInterfaces {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *Process) GetDatabases() map[string]*DatabaseConnection {
	if x != nil {
		return x.Databases
	}
	return nil
}

type ProcessInterfaces struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Consumed      map[string]*ConsumedInterface `protobuf:"bytes,1,rep,name=consumed,proto3" json:"consumed,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Produced      map[string]*ProducedInterface `protobuf:"bytes,2,rep,name=produced,proto3" json:"produced,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessInterfaces) Reset() {
	*x = ProcessInterfaces{}
	mi := &file_planpb_plan_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInterfaces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInterfaces) ProtoMessage() {}

func (x *ProcessInterfaces) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInterfaces.ProtoReflect.Descriptor instead.
func (*ProcessInterfaces) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessInterfaces) GetConsumed() map[string]*ConsumedInterface {
	if x != nil {
		return x.Consumed
	}
	return nil
}

func (x *ProcessInterfaces) GetProduced() map[string]*ProducedInterface {
	if x != nil {
		return x.Produced
	}
	return nil
}

type ConsumedInterface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Producer      string                 `protobuf:"bytes,1,opt,name=producer,proto3" json:"producer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumedInterface) Reset() {
	*x = ConsumedInterface{}
	mi := &file_planpb_plan_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumedInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumedInterface) ProtoMessage() {}

func (x *ConsumedInterface) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumedInterface.ProtoReflect.Descriptor instead.
func (*ConsumedInterface) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{5}
}

func (x *ConsumedInterface) GetProducer() string {
	if x != nil {
		return x.Producer
	}
	return ""
}

type ProducedInterface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Visibility    string                 `protobuf:"bytes,1,opt,name=visibility,proto3" json:"visibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProducedInterface) Reset() {
	*x = ProducedInterface{}
	mi := &file_planpb_plan_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProducedInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProducedInterface) ProtoMessage() {}

func (x *ProducedInterface) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProducedInterface.ProtoReflect.Descriptor instead.
func (*ProducedInterface) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{6}
}

func (x *ProducedInterface) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

type DatabaseConnection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mode          string                 `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseConnection) Reset() {
	*x = DatabaseConnection{}
	mi := &file_planpb_plan_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseConnection) ProtoMessage() {}

func (x *DatabaseConnection) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseConnection.ProtoReflect.Descriptor instead.
func (*DatabaseConnection) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{7}
}

func (x *DatabaseConnection) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type Interface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Protocol      string                 `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Schema        string                 `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Interface) Reset() {
	*x = Interface{}
	mi := &file_planpb_plan_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{8}
}

func (x *Interface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interface) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Interface) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type Database struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Location      string                 `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Schemas       []*DatabaseSchema      `protobuf:"bytes,3,rep,name=schemas,proto3" json:"schemas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Database) Reset() {
	*x = Database{}
	mi := &file_planpb_plan_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database) ProtoMessage() {}

func (x *Database) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database.ProtoReflect.Descriptor instead.
func (*Database) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{9}
}

func (x *Database) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Database) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Database) GetSchemas() []*DatabaseSchema {
	if x != nil {
		return x.Schemas
	}
	return nil
}

type DatabaseSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseSchema) Reset() {
	*x = DatabaseSchema{}
	mi := &file_planpb_plan_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseSchema) ProtoMessage() {}

func (x *DatabaseSchema) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseSchema.ProtoReflect.Descriptor instead.
func (*DatabaseSchema) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{10}
}

func (x *DatabaseSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Release struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FreezeDate    string                 `protobuf:"bytes,2,opt,name=freeze_date,json=freezeDate,proto3" json:"freeze_date,omitempty"`
	GoliveDate    string                 `protobuf:"bytes,3,opt,name=golive_date,json=goliveDate,proto3" json:"golive_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Release) Reset() {
	*x = Release{}
	mi := &file_planpb_plan_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_planpb_plan_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_planpb_plan_proto_rawDescGZIP(), []int{11}
}

func (x *Release) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Release) GetFreezeDate() string {
	if x != nil {
		return x.FreezeDate
	}
	return ""
}

func (x *Release) GetGoliveDate() string {
	if x != nil {
		return x.GoliveDate
	}
	return ""
}

var File_planpb_plan_proto protoreflect.FileDescriptor

const file_planpb_plan_proto_rawDesc = "" +
	"\n" +
	"\x11planpb/plan.proto\x12\tmigration\"\xdb\x01\n" +
	"\x04Plan\x12:\n" +
	"\fapplications\x18\x01 \x03(\v2\x16.migration.ApplicationR\fapplications\x124\n" +
	"\n" +
	"interfaces\x18\x02 \x03(\v2\x14.migration.InterfaceR\n" +
	"interfaces\x121\n" +
	"\tdatabases\x18\x03 \x03(\v2\x13.migration.DatabaseR\tdatabases\x12.\n" +
	"\breleases\x18\x04 \x03(\v2\x12.migration.ReleaseR\breleases\"N\n" +
	"\vApplication\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12+\n" +
	"\amodules\x18\x02 \x03(\v2\x11.migration.ModuleR\amodules\"N\n" +
	"\x06Module\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\tprocesses\x18\x02 \x03(\v2\x12.migration.ProcessR\tprocesses\"\xa2\x02\n" +
	"\aProcess\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12'\n" +
	"\x0fplanned_release\x18\x02 \x01(\tR\x0eplannedRelease\x12<\n" +
	"\n" +
	"interfaces\x18\x03 \x01(\v2\x1c.migration.ProcessInterfacesR\n" +
	"interfaces\x12?\n" +
	"\tdatabases\x18\x04 \x03(\v2!.migration.Process.DatabasesEntryR\tdatabases\x1a[\n" +
	"\x0eDatabasesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.migration.DatabaseConnectionR\x05value:\x028\x01\"\xd9\x02\n" +
	"\x11ProcessInterfaces\x12F\n" +
	"\bconsumed\x18\x01 \x03(\v2*.migration.ProcessInterfaces.ConsumedEntryR\bconsumed\x12F\n" +
	"\bproduced\x18\x02 \x03(\v2*.migration.ProcessInterfaces.ProducedEntryR\bproduced\x1aY\n" +
	"\rConsumedEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.migration.ConsumedInterfaceR\x05value:\x028\x01\x1aY\n" +
	"\rProducedEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.migration.ProducedInterfaceR\x05value:\x028\x01\"/\n" +
	"\x11ConsumedInterface\x12\x1a\n" +
	"\bproducer\x18\x01 \x01(\tR\bproducer\"3\n" +
	"\x11ProducedInterface\x12\x1e\n" +
	"\n" +
	"visibility\x18\x01 \x01(\tR\n" +
	"visibility\"(\n" +
	"\x12DatabaseConnection\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\tR\x04mode\"S\n" +
	"\tInterface\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bprotocol\x18\x02 \x01(\tR\bprotocol\x12\x16\n" +
	"\x06schema\x18\x03 \x01(\tR\x06schema\"o\n" +
	"\bDatabase\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\blocation\x18\x02 \x01(\tR\blocation\x123\n" +
	"\aschemas\x18\x03 \x03(\v2\x19.migration.DatabaseSchemaR\aschemas\"$\n" +
	"\x0eDatabaseSchema\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"_\n" +
	"\aRelease\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vfreeze_date\x18\x02 \x01(\tR\n" +
	"freezeDate\x12\x1f\n" +
	"\vgolive_date\x18\x03 \x01(\tR\n" +
	"goliveDateB&Z$github.com/dnswlt/hackz/planr/planpbb\x06proto3"

var (
	file_planpb_plan_proto_rawDescOnce sync.Once
	file_planpb_plan_proto_rawDescData []byte
)

func file_planpb_plan_proto_rawDescGZIP() []byte {
	file_planpb_plan_proto_rawDescOnce.Do(func() {
		file_planpb_plan_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_planpb_plan_proto_rawDesc), len(file_planpb_plan_proto_rawDesc)))
	})
	return file_planpb_plan_proto_rawDescData
}

var file_planpb_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_planpb_plan_proto_goTypes = []any{
	(*Plan)(nil),               // 0: migration.Plan
	(*Application)(nil),        // 1: migration.Application
	(*Module)(nil),             // 2: migration.Module
	(*Process)(nil),            // 3: migration.Process
	(*ProcessInterfaces)(nil),  // 4: migration.ProcessInterfaces
	(*ConsumedInterface)(nil),  // 5: migration.ConsumedInterface
	(*ProducedInterface)(nil),  // 6: migration.ProducedInterface
	(*DatabaseConnection)(nil), // 7: migration.DatabaseConnection
	(*Interface)(nil),          // 8: migration.Interface
	(*Database)(nil),           // 9: migration.Database
	(*DatabaseSchema)(nil),     // 10: migration.DatabaseSchema
	(*Release)(nil),            // 11: migration.Release
	nil,                        // 12: migration.Process.DatabasesEntry
	nil,                        // 13: migration.ProcessInterfaces.ConsumedEntry
	nil,                        // 14: migration.ProcessInterfaces.ProducedEntry
}
var file_planpb_plan_proto_depIdxs = []int32{
	1,  // 0: migration.Plan.applications:type_name -> migration.Application
	8,  // 1: migration.Plan.interfaces:type_name -> migration.Interface
	9,  // 2: migration.Plan.databases:type_name -> migration.Database
	11, // 3: migration.Plan.releases:type_name -> migration.Release
	2,  // 4: migration.Application.modules:type_name -> migration.Module
	3,  // 5: migration.Module.processes:type_name -> migration.Process
	4,  // 6: migration.Process.interfaces:type_name -> migration.ProcessInterfaces
	12, // 7: migration.Process.databases:type_name -> migration.Process.DatabasesEntry
	13, // 8: migration.ProcessInterfaces.consumed:type_name -> migration.ProcessInterfaces.ConsumedEntry
	14, // 9: migration.ProcessInterfaces.produced:type_name -> migration.ProcessInterfaces.ProducedEntry
	10, // 10: migration.Database.schemas:type_name -> migration.DatabaseSchema
	7,  // 11: migration.Process.DatabasesEntry.value:type_name -> migration.DatabaseConnection
	5,  // 12: migration.ProcessInterfaces.ConsumedEntry.value:type_name -> migration.ConsumedInterface
	6,  // 13: migration.ProcessInterfaces.ProducedEntry.value:type_name -> migration.ProducedInterface
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_planpb_plan_proto_init() }
func file_planpb_plan_proto_init() {
	if File_planpb_plan_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_planpb_plan_proto_rawDesc), len(file_planpb_plan_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_planpb_plan_proto_goTypes,
		DependencyIndexes: file_planpb_plan_proto_depIdxs,
		MessageInfos:      file_planpb_plan_proto_msgTypes,
	}.Build()
	File_planpb_plan_proto = out.File
	file_planpb_plan_proto_goTypes = nil
	file_planpb_plan_proto_depIdxs = nil
}
